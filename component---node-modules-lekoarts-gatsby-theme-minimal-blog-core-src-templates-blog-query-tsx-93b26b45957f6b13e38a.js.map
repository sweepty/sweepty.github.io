{"version":3,"sources":["webpack:///./src/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack:///./src/components/item-tags.tsx","webpack:///./src/components/blog-list-item.tsx","webpack:///./src/components/listing.tsx"],"names":["Blog","posts","useMinimalBlogConfig","tagsPath","basePath","title","sx","alignItems","justifyContent","flexFlow","variant","as","Link","to","replaceSlashes","mt","BlogComponent","props","allPost","data","nodes","query","ItemTags","tags","Fragment","map","tag","i","key","slug","name","BlogListItem","post","showTags","fontSize","color","a","description","date","Listing","className","mb"],"mappings":"iQA2CeA,EAjBF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACPC,cAAvBC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,CAAMC,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAASC,QAAQ,aAAjB,QACA,YAAC,IAAD,CAAOC,GAAIC,OAAMN,GAAI,CAAEI,QAAS,mBAAqBG,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,IAAxF,kBAIF,YAAC,IAAD,CAASF,MAAOA,EAAOK,GAAI,CAAES,GAAI,CAAC,EAAG,QCnC5BC,UCQA,YAAkD,IAAhBC,EAAgB,oBAErDC,EACND,EADFE,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAMjB,MAAOiB,EAAQE,OAAWH,KDb1BD,IAEFK,EAAQ,c,uHEyBNC,EAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTrB,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMoB,SAAP,KACGD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAD,CAAOhB,GAAIC,OAAMC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,EAAjB,IAA6BuB,EAAIG,OACjEH,EAAII,YCmBFC,EAlBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBAEnB,YAAC,IAAD,KACGD,EAAKT,MAAQU,GACV,YAAC,IAAMT,SAAP,KACE,YAAC,EAAD,CAAUD,KAAMS,EAAKT,QAG3B,YAAC,IAAD,CAAOZ,GAAIC,OAAMC,GAAImB,EAAKH,KAAMvB,GAAI,CAAE4B,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAClE,YAAC,IAAD,CAASzB,QAAQ,YAAYyB,MAAM,QAAQH,EAAK3B,QAEhD,iBAAGC,GAAI,CAAE6B,MAAO,YAAapB,GAAI,EAAGqB,EAAG,CAAED,MAAO,WAAaH,EAAKK,aAClE,iBAAG/B,GAAI,CAAE6B,MAAO,YAAapB,GAAI,EAAGqB,EAAG,CAAED,MAAO,eAC9C,wBAAOH,EAAKM,SCPHC,IARC,SAAC,GAAD,IAAGtC,EAAH,EAAGA,MAAH,IAAUuC,iBAAV,eAA0BP,gBAA1B,gBACd,uBAAS3B,GAAI,CAAEmC,GAAI,CAAC,EAAG,EAAG,IAAMD,UAAWA,GACxCvC,EAAMwB,KAAI,SAACO,GAAD,OACT,YAAC,EAAD,CAAcJ,IAAKI,EAAKH,KAAMG,KAAMA,EAAMC,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-93b26b45957f6b13e38a.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { Flex } from \"@theme-ui/components\"\nimport Layout from \"./layout\"\nimport Listing from \"./listing\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading variant=\"styles.h2\">Blog</Heading>\n        <TLink as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `  `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink, Heading } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  \n  <Box>\n    {post.tags && showTags && (\n        <React.Fragment>\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n    <Heading variant=\"styles.h4\" color='text'>{post.title}</Heading>\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `third` }}}>{post.description}</p>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }}}>\n      <time>{post.date}</time>\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}